{"version":3,"file":"static/js/51.6b252061.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactPerson/ContactPerson.styled.jsx","components/ContactPerson/ContactPerson.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","views/ContactsView.jsx"],"sourcesContent":["export const selectLoading = state => state.phonebook.contacts.isLoading;\nexport const selectAllContacts = state => state.phonebook.contacts.items;\nexport const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  /* display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 200px;\n  padding: 10px 90px 20px 15px;\n  border: 1px solid gray;\n  margin-top: 30px; */\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 320px;\n  padding: 20px;\n  border: 1px solid #ced4da;\n  border-radius: 8px;\n  margin: 30px auto;\n  background-color: #ffffff;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\nexport const Label = styled.label`\n  /* display: flex;\n  flex-direction: column;\n  gap: 5px; */\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 16px;\n  color: #495057;\n`;\n","import TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from '../../theme';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/phonebook/operations';\nimport { Form, Label } from './ContactForm.styled';\nimport { selectAllContacts } from 'redux/phonebook/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n  const { name, number } = formData;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      Array.isArray(contacts) &&\n      contacts.find(contact => contact.name === name)\n    ) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setFormData({ name: '', number: '' });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <TextField\n            variant=\"outlined\"\n            sx={{\n              '& .MuiInputBase-input': {\n                padding: '8px',\n              },\n            }}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <TextField\n            sx={{\n              '& .MuiInputBase-input': {\n                padding: '8px',\n              },\n            }}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </ThemeProvider>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\n// export const InputStyle = styled.input`\n//   width: 100%; // Full width\n//   padding: 10px; // Comfortable padding\n//   border: 1px solid #ced4da;\n//   border-radius: 4px;\n//   &:focus {\n//     border-color: blue;\n//     outline: none;\n//     box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.4);\n//   }\n// `;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 1rem; // Adjust as needed\n  font-weight: 600; // Adjust as needed\n  margin-bottom: 20px; // Adds spacing below the label\n`;\n","import { ThemeProvider, createTheme } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport React, { useState } from 'react';\nimport { Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/phonebook/filterSlice';\n\nexport const onFilterChange = value => {\n  return {\n    type: 'FILTER_CHANGE',\n    payload: value,\n  };\n};\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const [localFilter, setLocalFilter] = useState('');\n\n  const handleInputChange = event => {\n    const { value } = event.target;\n    setLocalFilter(value);\n    dispatch(setFilter(value));\n  };\n\n  const theme = createTheme({\n    components: {\n      MuiTextField: {\n        styleOverrides: {\n          root: {\n            background: '#F5F5F5',\n            borderRadius: '4px',\n            width: '100%', // Full width of parent\n            margin: '0 auto', // Centering if needed\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)', // Optional shadow for depth\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: '#1976d2', // Custom border color\n              },\n              '&:hover fieldset': {\n                borderColor: 'lightblue', // Color when hovered\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#1976d2', // Color when focused\n              },\n            },\n            '@media (max-width: 768px)': {\n              width: '100%', // Full width on smaller screens\n            },\n          },\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: '#1976d2',\n        contrastText: '#fff',\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Label>\n        Find contacts by name\n        <TextField\n          variant=\"outlined\"\n          sx={{\n            '& .MuiInputBase-input': {\n              padding: '8px',\n            },\n          }}\n          type=\"text\"\n          value={localFilter}\n          onChange={handleInputChange}\n        />\n      </Label>\n    </ThemeProvider>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\n// export const ButtonStyle = styled.button`\n//   margin-left: 10px;\n//   background-color: transparent;\n//   border: 1px solid gray;\n//   border-radius: 7px;\n//   cursor: pointer;\n//   b &:active {\n//     background-color: blue;\n//     color: white;\n//   }\n// `;\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ced4da;\n  border-radius: 8px;\n  background-color: #f8f9fa;\n  &:hover {\n    background-color: #e9ecef;\n  }\n`;\n","import React from 'react';\nimport { Item } from './ContactPerson.styled';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#d32f2f',\n      contrastText: '#fff',\n    },\n  },\n});\n\nconst ContactPerson = ({ contact, onDelete }) => (\n  <ThemeProvider theme={theme}>\n    <Item>\n      {contact.name}: {contact.number}\n      <Button sx={{ ml: '8px' }} type=\"button\" onClick={onDelete}>\n        Delete\n      </Button>\n    </Item>\n  </ThemeProvider>\n);\n\nexport default ContactPerson;\n","import styled from '@emotion/styled';\n\nexport const StyledContactList = styled.ul`\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ced4da;\n  border-radius: 8px;\n  background-color: #f8f9fa;\n\n  &:hover {\n    background-color: #e9ecef;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/phonebook/operations';\nimport ContactPerson from 'components/ContactPerson/ContactPerson';\nimport { selectAllContacts } from 'redux/phonebook/selectors';\nimport { StyledContactList } from './ContactList.styled';\n\nconst ContactList = props => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(state => state.phonebook.filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <StyledContactList>\n      {filteredContacts.map(contact => (\n        <ContactPerson\n          key={contact.id}\n          contact={contact}\n          onDelete={() => dispatch(deleteContact(contact.id))}\n        />\n      ))}\n    </StyledContactList>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '../components/Container';\nimport { selectLoading } from 'redux/phonebook/selectors';\nimport { fetchContacts } from 'redux/phonebook/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Helmet } from 'react-helmet';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Helmet>\n          <h1>Phonebook</h1>\n        </Helmet>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n\n        <div>{isLoadingContacts && <h1>Request in progress...</h1>}</div>\n\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n"],"names":["selectLoading","state","phonebook","contacts","isLoading","selectAllContacts","items","Form","styled","Label","dispatch","useDispatch","useSelector","useState","name","number","formData","setFormData","handleChange","event","target","value","prevData","ThemeProvider","theme","onSubmit","preventDefault","Array","isArray","find","contact","alert","addContact","TextField","variant","sx","padding","type","pattern","title","onChange","required","Button","color","localFilter","setLocalFilter","createTheme","components","MuiTextField","styleOverrides","root","background","borderRadius","width","margin","boxShadow","borderColor","palette","primary","main","contrastText","setFilter","Item","onDelete","ml","onClick","StyledContactList","props","filter","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","map","deleteContact","id","ContactsView","isLoadingContacts","Container","Helmet"],"sourceRoot":""}