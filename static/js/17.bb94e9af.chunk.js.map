{"version":3,"file":"static/js/17.bb94e9af.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactPerson/ContactPerson.styled.jsx","components/ContactPerson/ContactPerson.jsx","components/ContactList/ContactList.jsx","views/ContactsView.jsx"],"sourcesContent":["export const selectLoading = state => state.phonebook.contacts.isLoading;\nexport const selectAllContacts = state => state.phonebook.contacts.items;\nexport const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 200px;\n  padding: 10px 90px 20px 15px;\n  border: 1px solid gray;\n  margin-top: 30px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/phonebook/operations';\nimport { Form, Label } from './ContactForm.styled';\nimport { selectAllContacts } from 'redux/phonebook/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n  const { name, number } = formData;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      Array.isArray(contacts) &&\n      contacts.find(contact => contact.name === name)\n    ) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setFormData({ name: '', number: '' });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n  const theme = createTheme({\n    components: {\n      MuiTextField: {\n        styleOverrides: {\n          root: {\n            background: '#F5F5F5',\n            borderRadius: '4px',\n          },\n        },\n      },\n    },\n\n    palette: {\n      primary: {\n        main: '#1976d2',\n        contrastText: '#fff',\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <TextField\n            variant=\"outlined\"\n            sx={{\n              '& .MuiInputBase-input': {\n                padding: '8px',\n              },\n            }}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <TextField\n            sx={{\n              '& .MuiInputBase-input': {\n                padding: '8px',\n              },\n            }}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </ThemeProvider>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const InputStyle = styled.input`\n  width: 200px;\n  &:focus {\n    border-color: blue;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import { ThemeProvider, createTheme } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport React, { useState } from 'react';\nimport { Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/phonebook/filterSlice';\n\nexport const onFilterChange = value => {\n  return {\n    type: 'FILTER_CHANGE',\n    payload: value,\n  };\n};\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const [localFilter, setLocalFilter] = useState('');\n\n  const handleInputChange = event => {\n    const { value } = event.target;\n    setLocalFilter(value);\n    dispatch(setFilter(value));\n  };\n\n  const theme = createTheme({\n    components: {\n      MuiTextField: {\n        styleOverrides: {\n          root: {\n            background: '#F5F5F5',\n            borderRadius: '4px',\n            width: '300px',\n          },\n        },\n      },\n    },\n\n    palette: {\n      primary: {\n        main: '#1976d2',\n        contrastText: '#fff',\n      },\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <Label>\n        Find contacts by name\n        <TextField\n          variant=\"outlined\"\n          sx={{\n            '& .MuiInputBase-input': {\n              padding: '8px',\n            },\n          }}\n          type=\"text\"\n          value={localFilter}\n          onChange={handleInputChange}\n        />\n      </Label>\n    </ThemeProvider>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\n// export const ButtonStyle = styled.button`\n//   margin-left: 10px;\n//   background-color: transparent;\n//   border: 1px solid gray;\n//   border-radius: 7px;\n//   cursor: pointer;\n//   b &:active {\n//     background-color: blue;\n//     color: white;\n//   }\n// `;\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { Item } from './ContactPerson.styled';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#d32f2f',\n      contrastText: '#fff',\n    },\n  },\n});\n\nconst ContactPerson = ({ contact, onDelete }) => (\n  <ThemeProvider theme={theme}>\n    <Item>\n      {contact.name}: {contact.number}\n      <Button type=\"button\" onClick={onDelete}>\n        Delete\n      </Button>\n    </Item>\n  </ThemeProvider>\n);\n\nexport default ContactPerson;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/phonebook/operations';\nimport ContactPerson from 'components/ContactPerson/ContactPerson';\nimport { selectAllContacts } from 'redux/phonebook/selectors';\n\nconst ContactList = props => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(state => state.phonebook.filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <ContactPerson\n          key={contact.id}\n          contact={contact}\n          onDelete={() => dispatch(deleteContact(contact.id))}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '../components/Container';\nimport { selectLoading } from 'redux/phonebook/selectors';\nimport { fetchContacts } from 'redux/phonebook/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Helmet } from 'react-helmet';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Helmet>\n          <h1>Phonebook</h1>\n        </Helmet>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n\n        <div>{isLoadingContacts && <h1>Request in progress...</h1>}</div>\n\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n"],"names":["selectLoading","state","phonebook","contacts","isLoading","selectAllContacts","items","Form","styled","Label","dispatch","useDispatch","useSelector","useState","name","number","formData","setFormData","handleChange","event","target","value","prevData","theme","createTheme","components","MuiTextField","styleOverrides","root","background","borderRadius","palette","primary","main","contrastText","ThemeProvider","onSubmit","preventDefault","Array","isArray","find","contact","alert","addContact","TextField","variant","sx","padding","type","pattern","title","onChange","required","Button","color","localFilter","setLocalFilter","width","setFilter","Item","onDelete","onClick","props","filter","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","map","deleteContact","id","ContactsView","isLoadingContacts","Container","Helmet"],"sourceRoot":""}