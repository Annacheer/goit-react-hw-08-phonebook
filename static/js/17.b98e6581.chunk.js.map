{"version":3,"file":"static/js/17.b98e6581.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.jsx","components/ContactForm/ContactForm.styled.jsx","components/Filter/Filter.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactPerson/ContactPerson.styled.jsx","components/ContactPerson/ContactPerson.jsx","components/ContactList/ContactList.jsx","views/ContactsView.jsx"],"sourcesContent":["export const selectLoading = state => state.phonebook.contacts.isLoading;\nexport const selectAllContacts = state => state.phonebook.contacts.items;\nexport const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ButtonStyle = styled.button`\n  width: 100px;\n  background-color: transparent;\n  border: 1px solid gray;\n  border-radius: 7px;\n  cursor: pointer;\n  &:active {\n    background-color: blue;\n    color: white;\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 200px;\n  padding: 10px 90px 10px 15px;\n  border: 1px solid gray;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import styled from '@emotion/styled';\n\nexport const InputStyle = styled.input`\n  width: 200px;\n  &:focus {\n    border-color: blue;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/phonebook/operations';\nimport { Form, Label, ButtonStyle } from './ContactForm.styled';\nimport { InputStyle } from 'components/Filter/Filter.styled';\nimport { selectAllContacts } from 'redux/phonebook/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n  const { name, number } = formData;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      Array.isArray(contacts) &&\n      contacts.find(contact => contact.name === name)\n    ) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setFormData({ name: '', number: '' });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputStyle\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <InputStyle\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <ButtonStyle type=\"submit\">Add contact</ButtonStyle>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import React, { useState } from 'react';\nimport { InputStyle, Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/phonebook/filterSlice';\n\nexport const onFilterChange = value => {\n  return {\n    type: 'FILTER_CHANGE',\n    payload: value,\n  };\n};\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const [localFilter, setLocalFilter] = useState('');\n\n  const handleInputChange = event => {\n    const { value } = event.target;\n    setLocalFilter(value);\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <InputStyle\n        type=\"text\"\n        value={localFilter}\n        onChange={handleInputChange}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ButtonStyle = styled.button`\n  margin-left: 10px;\n  background-color: transparent;\n  border: 1px solid gray;\n  border-radius: 7px;\n  cursor: pointer;\n  b &:active {\n    background-color: blue;\n    color: white;\n  }\n`;\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { ButtonStyle, Item } from './ContactPerson.styled';\n\nconst ContactPerson = ({ contact, onDelete }) => (\n  <Item>\n    {contact.name}: {contact.number}\n    <ButtonStyle type=\"button\" onClick={onDelete}>\n      Delete\n    </ButtonStyle>\n  </Item>\n);\n\nexport default ContactPerson;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/phonebook/operations';\nimport ContactPerson from 'components/ContactPerson/ContactPerson';\nimport { selectAllContacts } from 'redux/phonebook/selectors';\n\nconst ContactList = props => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(state => state.phonebook.filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <ContactPerson\n          key={contact.id}\n          contact={contact}\n          onDelete={() => dispatch(deleteContact(contact.id))}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '../components/Container';\nimport { selectLoading } from 'redux/phonebook/selectors';\nimport { fetchContacts } from 'redux/phonebook/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Helmet } from 'react-helmet';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Helmet>\n          <h1>Phonebook</h1>\n        </Helmet>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n\n        <div>{isLoadingContacts && <h1>Request in progress...</h1>}</div>\n\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n"],"names":["selectLoading","state","phonebook","contacts","isLoading","selectAllContacts","items","ButtonStyle","styled","Form","Label","InputStyle","dispatch","useDispatch","useSelector","useState","name","number","formData","setFormData","handleChange","event","target","value","prevData","onSubmit","preventDefault","Array","isArray","find","contact","alert","addContact","type","pattern","title","onChange","required","localFilter","setLocalFilter","setFilter","Item","onDelete","onClick","props","filter","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","map","deleteContact","id","ContactsView","isLoadingContacts","Container","Helmet"],"sourceRoot":""}